FROM {{ base_image_name }}

{%- import 'macros.j2' as macros -%}

{%- if files['source']['.tar.xz'] -%}
{% set source_build_args -%}
ARG PYTHON_SOURCE_URL="{{ files['source']['.tar.xz']['url'] }}"
ARG PYTHON_SOURCE="{{ files['source']['.tar.xz']['filename'] }}"
{%- endset %}
{%- if files['source']['.tar.xz']['signature'] -%}
{% set signature_build_args -%}
ARG PYTHON_GPG_KEYS_URL=https://www.python.org/static/files/pubkeys.txt
ARG PYTHON_GPG_KEYS=pubkeys.txt
ARG PYTHON_SIGNATURE_URL="{{ files['source']['.tar.xz']['signature']['url'] }}"
ARG PYTHON_SIGNATURE="{{ files['source']['.tar.xz']['signature']['filename'] }}"
{%- endset %}
{% set download_and_verify_signature -%}
{{ macros.curl('${PYTHON_GPG_KEYS_URL}', '${PYTHON_GPG_KEYS}') }} && \
{{ macros.curl('${PYTHON_SIGNATURE_URL}', '${PYTHON_SIGNATURE}') }} && \
{{ macros.import_gpg_key_file('${PYTHON_GPG_KEYS}') }} && \
{{ macros.curl('${PYTHON_SIGNATURE_URL}', '${PYTHON_SIGNATURE}') }} && \
{{ macros.gpg_verify('${PYTHON_SIGNATURE}') }} && \
{%- endset %}
{%- endif -%}
{%- endif -%}

ARG PRODUCT=python{{ version_info.major }}
ARG PRODUCT_VERSION={{ version }}
ARG TEMP_DIR_ROOT=/tmp/${PRODUCT}
ARG TEMP_DIR=/${TEMP_DIR_ROOT}/${PRODUCT_VERSION}
ARG INSTALL_DIR_ROOT=/opt/${PRODUCT}
ARG INSTALL_DIR=${INSTALL_DIR_ROOT}/${PRODUCT_VERSION}

{% if source_build_args -%}
{{ source_build_args }}
{%- endif %}
{% if signature_build_args -%}
{{ signature_build_args }}
{%- endif %}

USER ${ROOT_UID}

RUN \
mkdir -p ${TEMP_DIR} ${INSTALL_DIR} && \
cd ${TEMP_DIR} && \
{% if source_build_args -%}
{{ macros.curl('${PYTHON_SOURCE_URL}', '${PYTHON_SOURCE}') }} && \
{% if download_and_verify_signature -%}
{{ download_and_verify_signature }}
{%- endif %}
PYTHON{{ version_info.major }}_COMPILE_DEPENDENCIES="gcc gcc-c++ make zlib-devel openssl-devel readline-devel bzip2-devel xz-devel gdbm-devel tk-devel sqlite-devel" && \
yum-install ${PYTHON{{ version_info.major }}_COMPILE_DEPENDENCIES} && \
mkdir -p ${TEMP_DIR}/build && \
{{ macros.extract_tarball('${PYTHON_SOURCE}', '${TEMP_DIR}/build') }} && \
cd ${TEMP_DIR}/build && \
./configure --enable-optimizations --prefix=${INSTALL_DIR} && \
make && \
make install && \
cd ${INSTALL_DIR} && \
PATH=${PATH}:${INSTALL_DIR}/bin ${INSTALL_DIR}/bin/python2 -m ensurepip && \
yum remove -y ${PYTHON{{ version_info.major }}_COMPILE_DEPENDENCIES} && \
yum clean all && \
{%- endif %}
fix-ownership ${INSTALL_DIR} && \
fix-permissions ${INSTALL_DIR} && \
rm -rf ${TEMP_DIR_ROOT}

ENV PYTHON{{ version_info.major }}_HOME ${INSTALL_DIR}
ENV PATH ${PYTHON{{ version_info.major }}_HOME}/bin:${PATH}

USER ${APP_UID}
