REPOSITORY_NAME := {{ repository_name }}
{% if registries -%}
REGISTRIES := {{ registries | join(' ') }}
{% endif -%}
TAGS := {{ tags | join(' ') }}
CONTAINER_NAME := $(shell echo $(REPOSITORY_NAME) | sed -e 's/[^a-zA-Z0-9_.-]/-/g')

.PHONY: all clean build push bash sudo run exec rm rmi
.IGNORE: sudo run rm rmi

build:
	set -x; \
	if [[ -z "$${ORACLE_USERNAME}" ]]; then \
	echo "ORACLE_USERNAME is not defined"; exit 1; fi; \
	if [[ -z "$${ORACLE_PASSWORD}" ]]; then \
	echo "ORACLE_PASSWORD is not defined"; exit 1; fi; \
	DOCKER_BUILD_ARGS=""; \
	DOCKER_BUILD_ARGS+="--build-arg ORACLE_USERNAME=$${ORACLE_USERNAME} "; \
	DOCKER_BUILD_ARGS+="--build-arg ORACLE_PASSWORD=$${ORACLE_PASSWORD} "; \
	for TAG in $(TAGS); do DOCKER_BUILD_ARGS+="-t $(REPOSITORY_NAME):$${TAG} "; done; \
	{% if registries -%}
	for REGISTRY in $(REGISTRIES); do \
	for TAG in $(TAGS); do \
	DOCKER_BUILD_ARGS+="-t $${REGISTRY}/$(REPOSITORY_NAME):$${TAG} "; \
	done; \
	done; \
	{% endif -%}
	sudo docker build $${DOCKER_BUILD_ARGS} .

push:
	set -x; \
	{% if registries -%}
	for REGISTRY in $(REGISTRIES); do \
	for TAG in $(TAGS); do \
	sudo docker push $${REGISTRY}/$(REPOSITORY_NAME):$${TAG}; \
	done; \
	done;
	{%- else -%}
	for TAG in $(TAGS); do sudo docker push $(REPOSITORY_NAME):$${TAG}; done;
	{%- endif %}

run:
	set -x; \
	DOCKER_RUN_ARGS=""; \
	DOCKER_RUN_ARGS+="--tty "; \
	DOCKER_RUN_ARGS+="--interactive "; \
	DOCKER_RUN_ARGS+="--rm "; \
	DOCKER_RUN_ARGS+="--name $(CONTAINER_NAME) "; \
	for TAG in $(TAGS); do IMAGE_NAME="$(REPOSITORY_NAME):$${TAG} "; break; done; \
	sudo docker run $${DOCKER_RUN_ARGS} $${IMAGE_NAME}

{% set container_shell = 'ash' if base_os == 'alpine' else 'bash' -%}
{{ container_shell }}:
	set -x; \
	DOCKER_RUN_ARGS=""; \
	DOCKER_RUN_ARGS+="--tty "; \
	DOCKER_RUN_ARGS+="--interactive "; \
	DOCKER_RUN_ARGS+="--rm "; \
	DOCKER_RUN_ARGS+="--name $(CONTAINER_NAME) "; \
	for TAG in $(TAGS); do IMAGE_NAME="$(REPOSITORY_NAME):$${TAG} "; break; done; \
	sudo docker run $${DOCKER_RUN_ARGS} $${IMAGE_NAME} {{ container_shell }}

sudo:
	set -x; \
	DOCKER_RUN_ARGS=""; \
	DOCKER_RUN_ARGS+="--tty "; \
	DOCKER_RUN_ARGS+="--interactive "; \
	DOCKER_RUN_ARGS+="--rm "; \
	DOCKER_RUN_ARGS+="--name $(CONTAINER_NAME) "; \
	DOCKER_RUN_ARGS+="--user 0 "; \
	DOCKER_RUN_ARGS+="--privileged "; \
	for TAG in $(TAGS); do IMAGE_NAME="$(REPOSITORY_NAME):$${TAG} "; break; done; \
	sudo docker run $${DOCKER_RUN_ARGS} $${IMAGE_NAME} {{ container_shell }}

rm:
	set -x; \
	DOCKER_RM_ARGS="--force "; \
	sudo docker rm $${DOCKER_RM_ARGS} $(CONTAINER_NAME)

rmi:
	set -x; \
	DOCKER_RMI_ARGS="--force "; \
	for TAG in $(TAGS); do IMAGE_NAMES="$(REPOSITORY_NAME):$${TAG} "; done; \
	sudo docker rmi $${DOCKER_RMI_ARGS} $${IMAGE_NAMES}

save:
	set -x; \
	for TAG in $(TAGS); do IMAGE_NAME="$(REPOSITORY_NAME):$${TAG}"; \
	ARCHIVE_NAME=$$(echo "$(REPOSITORY_NAME).$${TAG}.tar.gz" | sed -e 's/[^a-zA-Z0-9_.-]/-/g'); \
	break; done; \
	sudo docker save $${IMAGE_NAME} | gzip -9 > $${ARCHIVE_NAME}

clean: rm rmi

all: build push
